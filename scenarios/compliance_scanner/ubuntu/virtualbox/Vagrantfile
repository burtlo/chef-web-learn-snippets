# encoding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

chef_version = "stable-12.12.15"
chef_server_version = 'stable-12.12.0'
chef_compliance_version = 'stable-1.7.7'

compliance_username = "john-smith"
compliance_password = "P4ssw0rd!"

def set_hostname(server)
  server.vm.provision 'shell', inline: "hostname #{server.vm.hostname}"
end

Vagrant.configure(2) do |config|

  config.vm.define "workstation" do |cs|
    cs.vm.box = 'bento/ubuntu-14.04'
    cs.vm.hostname = "workstation.test"
    cs.vm.network "private_network", ip: "10.1.1.36"

    cs.vm.provider "vmware_fusion" do |v|
      v.memory = 2048
      v.cpus = 1

      # Enable nested virtualization.
      v.customize ["modifyvm", :id, "--hwvirtex", "on"]
      v.vmx["vhv.enable"] = "TRUE"
    end

    cs.vm.provision 'file', source: '../../../shared/files/node1', destination: '/tmp/node1'
    cs.vm.provision 'file', source: '../../../shared/files/node1.pub', destination: '/tmp/node1.pub'
    cs.vm.provision 'file', source: '../../../compliance_network/virtualbox/secrets/admin.pem', destination: '/tmp/admin.pem'
    cs.vm.provision 'file', source: 'files/knife.rb', destination: '/tmp/knife.rb'
    cs.vm.provision 'shell', inline: 'chmod 600 /tmp/node1'
    cs.vm.provision 'shell', inline: 'echo "10.1.1.33 chef-server.test" | tee -a /etc/hosts'
    cs.vm.provision 'shell', inline: 'echo "10.1.1.34 chef-compliance.test" | tee -a /etc/hosts'

    cs.vm.provision "chef_solo" do |chef|
      chef.product = "chef"
      chef.channel = chef_version.split('-')[0]
      chef.version = chef_version.split('-')[1]
      chef.cookbooks_path = "vendored-cookbooks"
      chef.add_recipe "workstation::default"
      chef.add_recipe "workstation::virtualbox"
      chef.add_recipe "workstation::vagrant"
      chef.add_recipe "compliance_scanner::default"
      chef.log_level = "warn"
      chef.json = {
        "snippets" => {
          "virtualization" => "virtualbox"
        },
        "products" => {
          "versions" => {
            "chef_server" => {
              "ubuntu" => chef_server_version
            },
            "compliance" => {
              "ubuntu" => chef_compliance_version
            }
          }
        },
        "compliance" => {
          "ip_address" => "10.1.1.34",
          "hostname" => "chef-compliance.test",
          "username" => compliance_username,
          "password" => compliance_password,
          "refresh_token" => "1/yHOJM5HLJL0APZB_u9cLxZ30llv5vYlOjpxNPPHzmA5RxC5p7dL5K8wKlObodMKRhdMa6GzVNk2Zbs5RNtSG2g==" # Need to get this manually
        },
        "scenario" => {
          "node_platform" => "ubuntu",
          "cookbook_name" => "ufw",
          "rule_name" => "Ensure Firewall is active",
          "compliance_profile" => "cis-ubuntu14.04lts-level1"
        },
        "nodes" => {
          "ubuntu" => {
            "node1" => {
              "name" => "node1",
              "identity_file" => "~/.ssh/node1",
              "hostname" => "node1.test",
              "ip_address" => "192.168.145.142",
              "ssh_user" => "root",
              "run_list" => "recipe[ufw]"
            }
          }
        }
      }
    end
  end
end
